syntax = "proto3";

package calc;

option go_package="./calcpb;calc";

message Numbers {
    int64 first = 1;
    int64 second = 2;
}

message SumRequest {
    Numbers numbers = 1;
}

message SumResponse {
    int64 result = 1;
}

message DecomposeRequest {
    int64 number = 1;
}

message DecomposeResponse {
    int64 primeNumber = 1;
}

message AverageRequest {
    int32 number = 1;
}

message AverageResponse {
    double result = 1;
}

message FindMaxRequest {
    int32 number = 1;
}

message FindMaxResponse {
    int32 maxNumber = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double squareNumber = 1;
}

service CalcService {
    rpc Sum(SumRequest) returns (SumResponse) {};
    rpc Decompose(DecomposeRequest) returns (stream DecomposeResponse) {};
    rpc Average(stream AverageRequest) returns (AverageResponse) {};
    rpc FindMax(stream FindMaxRequest) returns (stream FindMaxResponse) {};

    // Perform a Square Root Operation
    // 1. Accept a *sent number* as integer
    // 2. Return a *result (or square) number* as floating-point
    // Exception;
    // 1. Return an error - Invalid Argument, if *sent number* is negative
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}